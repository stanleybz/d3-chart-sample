<!DOCTYPE html><!DOCTYPE html>
<html lang=zh>
    <meta charset=utf-8>
    <meta content="width=device-width,initial-scale=1" name=viewport>
    <title>D3 linked node sample</title>
    <meta content="" name=description>
    <link href=./css/relationship.css rel=stylesheet>
    <div>
        <canvas height=1500 width=1500></canvas>
        <script
          src="https://code.jquery.com/jquery-3.2.1.min.js"
          integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
          crossorigin="anonymous"></script>
        <script src=js/d3.min.js></script>
        <script src=relation.js></script>
        <script>
            var canvas = document.querySelector("canvas")
              , width = 1500
              , height = 1500;

            d3.json("http://localhost:8000/store/?per_page=1000", function(r, o){

              var maxColor = 255;
              var minColor = 80;
              var stage = 0;
              var colorArray = [[255,85,85]];

              for (var i=0; i<1000; i++) {
                var thisColor = Object.assign([], colorArray[colorArray.length-1]);
                if (stage == 0) {
                  thisColor[2] = thisColor[2]+3;
                  colorArray.push(thisColor);
                  if (thisColor[2] == 255) stage = 1
                }
                if (stage == 1) {
                  thisColor[0] = thisColor[0]-3;
                  colorArray.push(thisColor);
                  if (thisColor[0] == 5) stage = 2
                }
                if (stage == 2) {
                  thisColor[1] = thisColor[1]+3;
                  colorArray.push(thisColor);
                  if (thisColor[1] == 255) stage = 3
                }
                if (stage == 3) {
                  thisColor[2] = thisColor[2]-3;
                  colorArray.push(thisColor);
                  if (thisColor[2] == 5) stage = 4
                }
                if (stage == 4) {
                  thisColor[0] = thisColor[0]+3;
                  colorArray.push(thisColor);
                  if (thisColor[0] == 255) stage = 5
                }
                if (stage == 5) {
                  thisColor[1] = thisColor[1]-3;
                  colorArray.push(thisColor);
                  if (thisColor[1] == 5) stage = 6
                }
              }

              console.log(colorArray);
              var colorSelect = 0;
              var allData  = o.data.data;
              var nodes = {
                0: {"id":"0","name":"Origin",color: "rgb(255,255,255)",radius: 20},
                1: {"id":"1","name":"Unknown",color: "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")",radius: 10}
              };
              var link = [];
              var followerList = [];
              var count = 1;
              var follower = [];

              /*
              * Getting node data
              */
              var settings = {
                "async": true,
                "crossDomain": true,
                "url": "http://localhost:8000/follower?per_page=1000",
                "method": "GET",
                "headers": {
                  "authorization-x": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhY2NvdW50X2lkIjoyNiwiZW1haWwiOiJyYS13ZW1pbmUtZGVtbyIsInVzZXJuYW1lIjoicmEtd2VtaW5lLWRlbW8iLCJjb21wYW55X25hbWUiOiJXZW1pbmUgRGVtbyIsImNvbXBhbnlfbG9nbyI6Imh0dHBzOlwvXC9yb2xsYW5nbGUuY29tXC93cC1jb250ZW50XC91cGxvYWRzXC8yMDEzXC8xMlwvcmFfbG9nby5wbmciLCJjb19pZCI6IndlbWluZV9kZW1vIiwicm9sZSI6MCwicGVybWlzc2lvbiI6WyJob21lIiwibWVudU1hbmFnZW1lbnQiLCJhdXRvUmVwbHkiLCJtZWRpYU5ld3MiLCJncm91cE1hbmFnZW1lbnQiLCJ0YWdNYW5hZ2VtZW50IiwiZm9sbG93ZXJNYW5hZ2VtZW50IiwibWVkaWFNYW5hZ2VtZW50IiwibWVzc2FnZU1hbmFnZW1lbnQiXSwibGFzdF9sb2dpbiI6IjIwMTctMTEtMjMgMTY6MDA6MzMiLCJpcF9udW1iZXIiOjM3NTQyOTA1NjMsImJyb3dzZXJfbmFtZSI6Ikdvb2dsZSBDaHJvbWU2Mi4wLjMyMDIuOTQifQ.B_7R55lMtCk2i9xvZTa9dCcsaUp-iNPCAd1QxEZqiRI",
                  "cache-control": "no-cache",
                  "postman-token": "389b4448-fee9-e227-ad85-8511ae211b26"
                }
              }

              $.ajax(settings).done(function (response) {
                var allFollower = response.data.data;
                for (var key in allFollower) {
                  followerList.push(allFollower[key].wechat_id);
                  nodes[allFollower[key].wechat_id] =
                    {
                      id: allFollower[key].wechat_id,
                      name: allFollower[key].nickname,
                      color: "rgb(255, 113, 255)",
                      radius: 10
                    }
                }

                /*
                * Setting nodes link
                */
                for (var key in allData) {
                  var thisData = JSON.parse(allData[key].value);
                  if (thisData.type === 'open') {
                    if (thisData.from == '' && thisData.to == '') {
                      // Do nothing
                    }
                    else if (thisData.from == '') {
                      link.push({
                        source: '0',
                        target: thisData.to,
                      });
                      nodes[thisData.to].color = "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")";
                      nodes[thisData.to].radius = nodes[thisData.to].radius + 0.5;
                    }
                    else if (followerList.indexOf(thisData.from) == -1) {
                      link.push({
                        source: '1',
                        target: thisData.to,
                      });
                      nodes[thisData.to].color = "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")";
                      nodes[thisData.to].radius = nodes[thisData.to].radius + 0.5;
                    }
                    else if (followerList.indexOf(thisData.to) == -1) {
                      link.push({
                        source: thisData.from,
                        target: '1',
                      });
                      nodes[thisData.from].color = "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")";
                      nodes[thisData.from].radius = nodes[thisData.from].radius + 0.5;
                    }
                    else {
                      link.push({
                        source: thisData.from,
                        target: thisData.to,
                      });
                      nodes[thisData.to].color = "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")";
                      nodes[thisData.from].color = "rgb("+colorArray[colorSelect][0]+","+colorArray[colorSelect][1]+","+colorArray[colorSelect][2]+")";

                      nodes[thisData.to].radius = nodes[thisData.to].radius + 0.5;
                      nodes[thisData.from].radius = nodes[thisData.from].radius + 0.5;
                    }
                  }
                  colorSelect++;
                }

                console.log('node', nodes);

                var node_array = [];
                // Convert nodes object to array
                for (var node in nodes) {
                    node_array.push(nodes[node]);
                }

                console.log(link, node_array);
                console.log('follower list', followerList);

                var s = new relation;
                s.setNodes(node_array),
                s.setLinks(link),
                s.setCanvas(canvas),
                s.setSize(width, height),
                s.setRadius(20),
                s.setLinkLength(200),
                s.setCharge(-200),
                s.init(),
                s.run()


              });


            });
        </script>
</div>
</body>
</html>
